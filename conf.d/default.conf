server {
    listen 80;
	server_name mail.example.com;
    root /public_html/;

    location ~ /.well-known/acme-challenge{
        allow all;
        root /usr/share/nginx/html/letsencrypt;
    }

        location / {
        return 301 https://www.example.com$request_uri;
    }
}
server {
     listen 443 ssl http2;
     server_name mail.example.com;
     client_max_body_size 100M;
     root /public_html/;

     ssl on;
     server_tokens off;
     ssl_session_cache shared:le_nginx_SSL:10m;
     ssl_session_timeout 1440m;
     ssl_session_tickets off;
     ssl_certificate /etc/nginx/ssl/live/example.com/fullchain.pem;
     ssl_certificate_key /etc/nginx/ssl/live/example.com/privkey.pem;
     ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
     add_header X-Frame-Options "SAMEORIGIN" always;
     add_header X-XSS-Protection "1; mode=block" always;
     add_header X-Content-Type-Options "nosniff" always;
     add_header Referrer-Policy "no-referrer-when-downgrade" always;
     add_header Strict-Transport-Security max-age=63072000;
     add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src *";
     add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";   
    #add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # enable strict transport security only if you understand the implications
     
     ssl_buffer_size 8k;
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_prefer_server_ciphers on;
     ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    location / {
        index index.html;
    }

}
